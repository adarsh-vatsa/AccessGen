name: CI

on:
  push:
    branches: [ main, master, develop, "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pinecone/requirements.txt ]; then pip install -r pinecone/requirements.txt; fi
          pip install pytest

      - name: Run tests
        env:
          # Ensure LLM-dependent tests are skipped unless keys are provided
          GEMINI_API_KEY: ""
          PINECONE_API_KEY: ""
        run: |
          pytest -q

  nightly:
    # Nightly/full coverage workflow (manual trigger for now)
    if: ${{ false }} # disabled by default; enable when ready
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pinecone/requirements.txt ]; then pip install -r pinecone/requirements.txt; fi
          pip install pytest
      - name: Run full suite with real keys
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        run: |
          pytest -q
